import matplotlib.pyplot as plt
import seaborn as sns

# Данные для графиков
data = {
    "На какую систему будет похожа создаваемая?": {
        "WorldEdit": 15,
        "MCEdit": 5,
        "WorldPainter": 3,
        "Другие": 2
    },
    "С какими системами и как давно вы работаете?": {
        "WorldEdit (1-3 года)": 10,
        "WorldEdit (3-5 лет)": 5,
        "WorldEdit (5+ лет)": 3,
        "MCEdit (1-3 года)": 2,
        "MCEdit (3-5 лет)": 1,
        "WorldPainter (1-3 года)": 2,
        "Другие (1-3 года)": 2
    },
    "Сколько времени при игре в Minecraft вы уделяете постройке структур самостоятельно?": {
        "Несколько минут": 5,
        "15-30 минут": 10,
        "1-2 часа": 7,
        "2+ часа": 3
    },
    "Каковы ваши ожидания от системы - основные функции": {
        "Генерация схем": 20,
        "Изменение существующих схем": 15,
        "Интерактивный редактор": 10,
        "Импорт/экспорт схем": 5
    },
    "Каковы ваши ожидания от системы - интерфейс и пользовательский опыт": {
        "Простота использования": 22,
        "Интуитивный интерфейс": 20,
        "Быстродействие": 18,
        "Кастомизация": 15
    },
    "Каковы ваши ожидания от системы - примеры задач": {
        "Создание замков и городов": 15,
        "Генерация ландшафтов": 10,
        "Изменение существующих построек": 8,
        "Создание мини-игр": 5
    },
    "Какие шаги необходимо предпринять для решения каждой задачи - порядок действий": {
        "Выбор шаблона": 20,
        "Настройка параметров": 18,
        "Генерация схемы": 15,
        "Изменение схемы": 12,
        "Экспорт схемы": 10
    },
    "Какие шаги необходимо предпринять для решения каждой задачи - примеры сценариев": {
        "Создание замка": 15,
        "Генерация леса": 10,
        "Изменение дома": 8,
        "Создание арены": 5
    },
    "В каком случае вы будете считать, что система 'Хороша' - критерии оценки": {
        "Функциональность": 22,
        "Пользовательский интерфейс": 20,
        "Производительность": 18,
        "Документация и поддержка": 15
    },
    "В каком случае вы будете считать, что система 'Хороша' - примеры успешного использования": {
        "Быстрое создание замка": 15,
        "Легкое изменение ландшафта": 10,
        "Создание мини-игры": 8,
        "Экспорт схемы для использования в другом проекте": 5
    }
}

# Функция для создания графика
def create_bar_chart(data, title, color):
    categories = list(data.keys())
    values = list(data.values())
    
    plt.figure(figsize=(10, 6))
    sns.barplot(x=categories, y=values, palette=[color] * len(categories))
    plt.title(title, fontsize=16)
    plt.xlabel('Категории', fontsize=14)
    plt.ylabel('Количество', fontsize=14)
    plt.xticks(rotation=45, ha='right', fontsize=12)
    plt.yticks(fontsize=12)
    plt.tight_layout()
    plt.show()

# Цвета для графиков
colors = [
    "skyblue", "lightgreen", "lightcoral", "wheat", "lightpink",
    "lightblue", "lightgreen", "lightcoral", "wheat", "lightpink"
]

# Создание графиков для каждого вопроса
for i, (question, answers) in enumerate(data.items()):
    create_bar_chart(answers, question, colors[i])
